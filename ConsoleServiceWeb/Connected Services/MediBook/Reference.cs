//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleServiceWeb.MediBook {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:wsComelecServer", ConfigurationName="MediBook.wsComelecServerPortType")]
    public interface wsComelecServerPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsComelecServer#datosTransaccion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        ConsoleServiceWeb.MediBook.RespTransaccion registerPatient(ConsoleServiceWeb.MediBook.WsTransaccion data, string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsComelecServer#datosTransaccion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<ConsoleServiceWeb.MediBook.RespTransaccion> registerPatientAsync(ConsoleServiceWeb.MediBook.WsTransaccion data, string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsComelecServer#datosespecialidades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        ConsoleServiceWeb.MediBook.RespSpecialties getSpecialties(ConsoleServiceWeb.MediBook.WsSpecialties data, string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:wsComelecServer#datosespecialidades", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<ConsoleServiceWeb.MediBook.RespSpecialties> getSpecialtiesAsync(ConsoleServiceWeb.MediBook.WsSpecialties data, string user, string password);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:wsComelecServer")]
    public partial class WsTransaccion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string lastnameField;
        
        private string lastnamemotherField;
        
        private string emailField;
        
        private string cellphoneField;
        
        private string ciField;
        
        private string expeditionField;
        
        private string birthdayField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
                this.RaisePropertyChanged("Lastname");
            }
        }
        
        /// <remarks/>
        public string Lastnamemother {
            get {
                return this.lastnamemotherField;
            }
            set {
                this.lastnamemotherField = value;
                this.RaisePropertyChanged("Lastnamemother");
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        public string Cellphone {
            get {
                return this.cellphoneField;
            }
            set {
                this.cellphoneField = value;
                this.RaisePropertyChanged("Cellphone");
            }
        }
        
        /// <remarks/>
        public string Ci {
            get {
                return this.ciField;
            }
            set {
                this.ciField = value;
                this.RaisePropertyChanged("Ci");
            }
        }
        
        /// <remarks/>
        public string Expedition {
            get {
                return this.expeditionField;
            }
            set {
                this.expeditionField = value;
                this.RaisePropertyChanged("Expedition");
            }
        }
        
        /// <remarks/>
        public string Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("Birthday");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:wsComelecServer")]
    public partial class RespSpecialties : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int codErrorField;
        
        private string descripcionField;
        
        /// <remarks/>
        public int CodError {
            get {
                return this.codErrorField;
            }
            set {
                this.codErrorField = value;
                this.RaisePropertyChanged("CodError");
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
                this.RaisePropertyChanged("Descripcion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:wsComelecServer")]
    public partial class WsSpecialties : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cityidField;
        
        /// <remarks/>
        public string Cityid {
            get {
                return this.cityidField;
            }
            set {
                this.cityidField = value;
                this.RaisePropertyChanged("Cityid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:wsComelecServer")]
    public partial class RespTransaccion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int codErrorField;
        
        private string descripcionField;
        
        /// <remarks/>
        public int CodError {
            get {
                return this.codErrorField;
            }
            set {
                this.codErrorField = value;
                this.RaisePropertyChanged("CodError");
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
                this.RaisePropertyChanged("Descripcion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsComelecServerPortTypeChannel : ConsoleServiceWeb.MediBook.wsComelecServerPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsComelecServerPortTypeClient : System.ServiceModel.ClientBase<ConsoleServiceWeb.MediBook.wsComelecServerPortType>, ConsoleServiceWeb.MediBook.wsComelecServerPortType {
        
        public wsComelecServerPortTypeClient() {
        }
        
        public wsComelecServerPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsComelecServerPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsComelecServerPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsComelecServerPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleServiceWeb.MediBook.RespTransaccion registerPatient(ConsoleServiceWeb.MediBook.WsTransaccion data, string user, string password) {
            return base.Channel.registerPatient(data, user, password);
        }
        
        public System.Threading.Tasks.Task<ConsoleServiceWeb.MediBook.RespTransaccion> registerPatientAsync(ConsoleServiceWeb.MediBook.WsTransaccion data, string user, string password) {
            return base.Channel.registerPatientAsync(data, user, password);
        }
        
        public ConsoleServiceWeb.MediBook.RespSpecialties getSpecialties(ConsoleServiceWeb.MediBook.WsSpecialties data, string user, string password) {
            return base.Channel.getSpecialties(data, user, password);
        }
        
        public System.Threading.Tasks.Task<ConsoleServiceWeb.MediBook.RespSpecialties> getSpecialtiesAsync(ConsoleServiceWeb.MediBook.WsSpecialties data, string user, string password) {
            return base.Channel.getSpecialtiesAsync(data, user, password);
        }
    }
}
